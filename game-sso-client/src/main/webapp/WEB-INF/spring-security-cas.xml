<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 	
 	<!-- 不需要登陆认证的资源写法 -->
 	<!-- 
 	<http security="none" pattern="/**/login" /> 
 	 -->
 	
	<http auto-config="false" entry-point-ref="casEntryPoint" >
		<intercept-url pattern="/protected/*" access="ROLE_USER" />
		<intercept-url pattern="/member/*" access="ROLE_USER" />
		
		<!-- 登出时候，经过的过滤器 -->
		<!-- 
		<logout logout-url="/logout*" success-handler-ref="casLogoutSuccessHandler"/> 
		<logout logout-url="/logout.do" invalidate-session="true"  logout-success-url="/logout.html" />  
		 -->
		<custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER" />
		<!-- 登陆验证，经过CAS 过滤器 -->
		<custom-filter position="CAS_FILTER" ref="casFilter"/>
		<custom-filter ref="singleLogoutFilter" before="CAS_FILTER" /> 
		
	</http>

	<!-- 提供了CAS SSO 的登陆入口 -->
	<!-- 
		| loginUrl 是 cas-server 项目的登陆地址
	 -->
	<beans:bean id="casEntryPoint"  class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">  
    	<beans:property name="loginUrl" value="https://cas.evanq.net:8443/cas/login"/>  
    	<beans:property name="serviceProperties" ref="serviceProperties"/>  
	</beans:bean> 
	
	<!-- org.springframework.security.cas.ServiceProperties 作用？ -->
	<beans:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">  
    	<!-- 提供收取ticket 的地址,该地址会注册到cas server 中 -->
    	<beans:property name="service"  
            value="http://mint4j.evanq.net:9000/j_spring_cas_security_check"/>  
    	<beans:property name="sendRenew" value="false"/>  
	</beans:bean>  
	
	
	<!-- cas client filter -->
	<!-- 
		| 需要提供 authenticationManager （Spring Security）
	 -->
	<beans:bean id="casFilter"  
            class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
       	<!-- cas client 此处可以配置handler (验证成功与失败)
       		| authenticationSuccessHandler
       		| authenticationFailureHandler
       	 -->
            
    </beans:bean>
    
	<authentication-manager alias="authenticationManager">  
        <authentication-provider ref="casAuthenticationProvider"/>
          
    </authentication-manager> 
    
	<!-- the auth provider -->
	<beans:bean id="casAuthenticationProvider"  
            class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<beans:property name="authenticationUserDetailsService" ref="casAuthenticationUserDetailsService"/>
		<beans:property name="serviceProperties" ref="serviceProperties" />  
		<beans:property name="ticketValidator"> 
			<beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">  
                <beans:constructor-arg index="0" value="https://cas.evanq.net:8443/cas/login" />  
            </beans:bean>  
		</beans:property>       
		<beans:property name="key" value="an_id_for_this_auth_provider_only"/>       
    </beans:bean>
    <beans:bean id="casAuthenticationUserDetailsService" class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">  
		<beans:property name="userDetailsService" ref="userDetailsService"></beans:property>
    </beans:bean>
	    <sec:user-service id="userDetailsService">
	        <sec:user name="admin" password="admin" authorities="ROLE_ADMIN" />
	        <sec:user name="@@THIS SHOULD BE REPLACED@@" password="notused" authorities="ROLE_ADMIN" />
	    </sec:user-service>
    
    <!-- 
	<user-service>
		<user name="admin" password="admin" authorities="ROLE_ADMIN" />
	</user-service>    
     -->
	<!-- 
  	<beans:bean id="userDetailsService" class="com.reportstart.security.service.impl.BocUserDetaislServiceImpl">  
        <beans:property name="userDao">  
            <beans:ref bean="userDao"/>  
        </beans:property>  
    </beans:bean>        
	 -->
    <!-- CAS logout -->
    <!--
    	| cas-client logout 成功，使用 logout ticket 访问 cas-server logout 
     -->
    <beans:bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" /> 
    <beans:bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter"> 
    	<beans:constructor-arg value="https://cas.evanq.net:8443/cas/logout" /> 
    	<beans:constructor-arg> 
    		<beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/> 
    	</beans:constructor-arg> 
   		<beans:property name="filterProcessesUrl" value="/j_spring_cas_security_logout" /> 
    </beans:bean>     
      

</beans:beans>