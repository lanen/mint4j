<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>evanq.game</groupId>
		<artifactId>wrapper</artifactId>
		<version>1</version>
	</parent>
	<groupId>evanq.game</groupId>
	<artifactId>game-sso-client</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>game-sso-client</name>
	<url>http://maven.apache.org</url>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<cas.client.version>3.2.1</cas.client.version>
		<host.name>mint4j.evanq.net</host.name>
		<keystore.alias>mint4j_game</keystore.alias>
		<keystore.storepass>jetty9</keystore.storepass>
		<keystore.keyalg>RSA</keystore.keyalg>
		<keystore>${basedir}/jetty/etc/keystore</keystore>
		<crtfile.keystore.alias>evanq_cas</crtfile.keystore.alias>
		<crtfile.fromserver>${basedir}/../game-sso-server/jetty/etc/evanq_cas.cer</crtfile.fromserver>
		<skip>true</skip>
		<spring.version>3.2.6.RELEASE</spring.version>
		<spring.security.version>3.2.0.RELEASE</spring.security.version>
		<spring.jpa.version>1.3.1.RELEASE</spring.jpa.version>
		
		<hibernate.version>4.0.1.Final</hibernate.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.jasig.cas.client</groupId>
			<artifactId>cas-client-core</artifactId>
			<version>${cas.client.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.1</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.1</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>


		<!-- Spring 3 dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-cas</artifactId>
			<version>${spring.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>1.6.2</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring.jpa.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.175</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.13</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.12.1.GA</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>keytool-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>

					<execution>
						<phase>generate-resources</phase>
						<id>clean</id>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<verbose>true</verbose>
							<skip>${skip}</skip>
							<keystore>${keystore}</keystore>
						</configuration>
					</execution>

					<!-- 1 生成键值对 -->

					<execution>
						<id>generateKeyPair</id>
						<goals>
							<goal>generateKeyPair</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<verbose>true</verbose>
							<skip>${skip}</skip>
							<keystore>${keystore}</keystore>
							<dname>cn=${host.name}, OU=NC, O=ShenZhen Evanq Game, L=ZB,
								ST=ShenZhen, C=CN</dname>
							<keypass>jetty9</keypass>
							<storepass>${keystore.storepass}</storepass>
							<alias>${keystore.alias}</alias>
							<keyalg>${keystore.keyalg}</keyalg>
						</configuration>
					</execution>

					<!-- 从新生成的keystroe export crt file -->
					<!-- <execution> <id>exportCertificate</id> <goals> <goal>exportCertificate</goal> 
						</goals> <phase>generate-resources</phase> <configuration> <verbose>true</verbose> 
						<skipIfExist>true</skipIfExist> <keystore>${keystore}</keystore> <storepass>${keystore.storepass}</storepass> 
						<alias>${keystore.alias}</alias> <file>${crtfile}</file> </configuration> 
						</execution> -->

					<!-- 将 crt file 导入 keystroe, 以示信任 来自server 端的证书 -->

					<!-- list -->
					<execution>
						<id>list1</id>
						<goals>
							<goal>list</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<skip>${skip}</skip>
							<verbose>true</verbose>
							<keystore>${keystore}</keystore>
							<storepass>${keystore.storepass}</storepass>
						</configuration>
					</execution>
					<!-- <execution> <id>deleteAlias-server-crt</id> <goals> <goal>deleteAlias</goal> 
						</goals> <phase>generate-resources</phase> <configuration> <verbose>true</verbose> 
						<keystore>${keystore}</keystore> <skip>${skip}</skip> <storepass>${keystore.storepass}</storepass> 
						<alias>${crtfile.keystore.alias}</alias> <noprompt>true</noprompt> </configuration> 
						</execution> -->


					<execution>
						<id>importCertificate</id>
						<goals>
							<goal>importCertificate</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<verbose>true</verbose>
							<keystore>${keystore}</keystore>
							<trustcacerts>true</trustcacerts>

							<skip>${skip}</skip>
							<noprompt>true</noprompt>
							<storepass>${keystore.storepass}</storepass>
							<alias>${crtfile.keystore.alias}</alias>
							<file>${crtfile.fromserver}</file>
						</configuration>
					</execution>

					<!-- list -->
					<execution>
						<id>list2</id>
						<goals>
							<goal>list</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<skip>${skip}</skip>
							<verbose>true</verbose>
							<keystore>${keystore}</keystore>
							<storepass>${keystore.storepass}</storepass>
						</configuration>
					</execution>


				</executions>
			</plugin>

			<!-- http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html -->
			<!-- E:\tool\jetty9\lib>java -cp jetty-util-9.1.1.v20140108.jar org.eclipse.jetty.util.security.Password 
				jetty9 jetty9 -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.1.1.v20140108</version>
				<configuration>
					<!-- ? 这里是否可以有多个 jettyXml，配置多个服务器 -->
					<jettyXml>jetty/jetty.xml,jetty/jetty-http.xml</jettyXml>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											keytool-maven-plugin
										</artifactId>
										<versionRange>
											[1.4,)
										</versionRange>
										<goals>
											<goal>clean</goal>
											<goal>generateKeyPair</goal>
											<goal>list</goal>
											<goal>
												importCertificate
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
